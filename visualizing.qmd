# Visualizing the data

## RGB, NIC and CIR preview

Preview RGB with the scale. In all of the following functions, you can call the `extent` argument.

```{r}
#| eval: false

# Preview RGB
p_rgb <- reflectance |>
  # Plot
  plot_raster_rgb( #<1>
    calibration = pixel_to_distance(hsi_tools_core) #<2>
  )

# Print
p_rgb
```

1.  Function to plot RGB.
2.  Call to HSItools core output of the Shiny app storing the depth calibration.

![Plot of RGB data with depth scale.](figures/p_rgb.png)

## Index map

For example, we can plot the spatial map of RABD~660:670max~.

```{r}
#| eval: false

# Plot RABD
p_rabd <- rabd_max |>
  plot_raster_proxy( #<1>
    hsi_index = names(rabd), #<2>
    calibration = pixel_to_distance(hsi_tools_core), #<3>
    palette = "viridis", #<4>
  )

# Print
p_rabd
```

1.  Function to plot index map.
2.  Name specification.
3.  Call to HSItools core output of the Shiny app storing the depth calibration.
4.  Palette of choice, one of the {viridis} options.

![Plot of RABD~660:670max~ data with depth scale.](figures/p_rabd.png)

## Index plot

We can extract profile of the selected index using one of the predefined ROIs. We use the small, green ROI in the middle.

![Preview of ROIs](figures/qgis-05.png)

```{r}
#| eval: false

# Plot series
p_rabd_series <- rabd |>
  # Plot
  HSItools::plot_profile_spectral_series( #<1>
    hsi_index = names(rabd), #<2>
    calibration = pixel_to_distance(hsi_tools_core), #<3>

# Print
p_rabd_series
```

1.  Function to plot index profile.
2.  Name specification.
3.  Call to HSItools core output of the Shiny app storing the depth calibration.

![Profile of RABD~660:670max~ using the small ROI.](figures/p_rabd_series.png)

We can display it side by side using the magic of {patchwork}.

```{r}
#| eval: false

# Plot using {patchwork}
p_rgb + p_rabd + p_rabd_series
```

![RGB, RABD~660:670max~ map and RABD~660:670max~ profile.](figures/p_rgb-rabd-rabds.png)

## Spectrum plot

Finally, you might be interested in plotting the average spectrum from the selected area. We'll use the uppermost "sample" from the ROI preview.

```{r}
#| eval: false

# Plot reflectance profile
p_sample <- reflectance |>
  plot_profile_spectral_profile() #<1>

# Print
p_sample
```

1.  Function to plot spectral profile.

![Reflectance profile of the topmost "sample" area.](figures/p_spectrum.png)
