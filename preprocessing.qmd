# Preprocessing

## Normalization

Before any spectral indices and properties are calculated, normalizing the data and expressing it as a reflectance is necessary. Here, reflectance is a fraction of the signal between the dark and white references acquired during or before the scan.

Normalization is achieved by following the equation:

Which can be modified for different acquisition setups for references:

### Normalization with Shiny output

If Shiny GUI was used for data selection, cropping, and calibration, then it would be easy to pass Shiny's output to the normalization routine. The normalized files will be written into your data's products directory.

```{r}
#| eval: false

# Create normalized reflectance file
reflectance <- hsi_tools_core |> #<1>
  HSItools::prepare_core() #<2>
```

1.  The Shiny GUI output.

2.  Normalization function.

It is possible to iterate over multiple directories at once using the `{purrr}` package.

### Normalization of the directory (no Shiny output)

::: callout-warning
## ToDo

This is a feature yet to be added.
:::

If no Shiny output is available and input is not produced by hand, the normalization routine can be run without it. In such a case, the entire capture data will be normalized. However, without Shiny output, it is harder to calibrate distances properly.

```{r}
#| eval: false

# Create normalized reflectance file
reflectance <- hsi_tools_core |>
  HSItools::prepare_core()
```

It is possible to iterate over multiple directories at once using the `{purrr}` package.

## Savitzky-Golay smoothing

Applying spectral smoothing, such as the Savitzky-Golay spectral filter (Savitzky and Golay 1964), is a good idea. This way, spurious, random peaks and throughs do not significantly influence the calculation results.

```{r}
#| eval: false


reflectance <- reflectance |> #<1>
  # Specify the file extension
  HSItools::filter_savgol() #<2>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.

## Continuum removal

::: callout-warning
## ToDo

This is a feature that got broken.
:::

We can process our data further by removing the continuum, which follows the rule of dividing the spectrum by its bounding box. This way, the spectrum becomes flatter.

```{r}
#| eval: false

reflectance_cr <- reflectance |> #<1>
  HSItools::remove_continuum() #<2>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
