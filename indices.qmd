# Indices

HSItools offers a way to calculate a few of the most common indices classes used in paleoenvironmental investigations.

## Mean reflectance (Rmean)

The most straightforward index is the mean of the reflectance values of all selected wavelengths within a given pixel. It reflects overall changes in the darkness or brightness of the captured specimen. It can be used to normalize other indices or filter the data, for example by removing too dark pixels.

```{r}
#| eval: false

rmean <- reflectance |> #<1>
  HSItools::calculate_rmean() #<2>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.

## Relative Absorption Band Depth (RABD)

A common index, where typically values starting at 1.0 indicate reflectance of a given substance.

The RABD calculation has variations, but the results are generally not drastically different. You can use predefined values or provide them manually.

The output's name informs you about the calculated proxy and additional modifications to the reflectance file; here, we calculated it with Savitzky-Golay smoothed reflectance. Let’s calculate one of the most common indices to estimate the total chloropigments-*a*: RABD~660:670~.

### Variant 1 – "max"

In this variant, a minimum reflectance is found in the trough for each pixel and flexibly used for calculations.

```{r}
#| eval: false

rabd_max <- reflectance |> #<1>
  HSItools::calculate_rabd( #<2>
    edges = c(590, 730), #<3>
    trough = c(660:670), #<4>
    rabd_name = "rabd660670", #<5>
    rabd_type = "max") #<6>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Edges of the trough, the broader scope.
4.  Trough of interest, a narrower scope to find the reflectance value.
5.  Name of the index to be stored in the raster data.
6.  Type of the RABD calculation.

### Variant 2 – "strict"

This classic variant supplies a specific wavelength to calculate RABD for every pixel. Therefore, it is RABD~665~.

```{r}
#| eval: false

rabd_strict <- reflectance |>
  HSItools::calculate_rabd(
    edges = c(590, 730),
    trough = 665,
    rabd_name = "rabd665",
    rabd_type = "strict")
```

### Variant 3 – "midpoint"

This is variant 2 (strict), with the added shortcut of always finding the middle point between the through edges—a convenience shortcut for some. Here, it equals RABD~665~.

```{r}
#| eval: false

rabd_midpoint <- reflectance |> #<1>
  HSItools::calculate_rabd( #<2>
    edges = c(590, 730), #<3>
    trough = c(660:670), #<4>
    rabd_name = "rabd660670", #<5>
    rabd_type = "mid") #<6>
```

## Relative Absorption Band Area - ToDo

::: callout-warning
## ToDo

This is a feature yet to be added.
:::

```{r}
#| eval: false

raba <- reflectance |> #<1>
  HSItools::calculate_raba( #<2>
    edges = c(590, 730), #<3>
    trough = c(660:670), #<4>
    raba_name = "raba660670"), #<5>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Edges of the trough, the broader scope.
4.  Trough of interest, a narrower scope to find the reflectance value.
5.  Name of the index to be stored in the raster data.

## Spectral ratios

Another popular and straightforward index is band ratios, where reflectance at wavelength X is divided by reflectance at wavelength Y.

```{r}
#| eval: false

ratio_570630 <- reflectance |> #<1>
  HSItools::calculate_band_ratio( #<2>
    edges = c(570, 630), #<3>
    ratio_name = "r570r630") #<4>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Wavelength X and Y, numerator and denominator.
4.  Name of the index to be stored in the raster data.

## Derivatives - ToDo

::: callout-warning
## ToDo

This is a feature yet to be added.
:::

Another popular and straightforward index is band ratios, where reflectance at wavelength X is divided by reflectance at wavelength Y.

```{r}
#| eval: false

derivative_550 <- reflectance |> #<1>
  HSItools::calculate_derivative( #<2>
    band = 550, #<3>
    derivative_name = "der550") #<4>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Wavelength of choice.
4.  Name of the index to be stored in the raster data.

## Differences

```{r}
#| eval: false

difference_650675 <- reflectance |> #<1>
  HSItools::calculate_band_difference( #<2>
    edges = c(650, 675), #<3>
    difference_name = "dif650dif670") #<4>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Wavelength X and Y.
4.  Name of the index to be stored in the raster data.

## Normalized difference index (NDI)

```{r}
#| eval: false

ndi_650675 <- reflectance |> #<1>
  HSItools::calculate_ndi( #<2>
    edges = c(650, 675), #<3>
    ndi_name = "ndi650ndi670") #<4>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
3.  Wavelength X and Y.
4.  Name of the index to be stored in the raster data.

## Other

### λ Red Edge Minimum Point (λREMP) - ToDo

::: callout-warning
## ToDo

This is a feature yet to be added.
:::

This index was introduced in the paper “Ghanbari, H., Zilkey, D.R., Gregory-Eaves, I., Antoniades, D., 2023. A new index for the rapid generation of chlorophyll time series from hyperspectral imaging of sediment cores. Limnology and Oceanography: Methods 21, 703–717.

```{r}
#| eval: false

remp <- reflectance |> #<1>
  HSItools::calculate_remp() #<2>
```

1.  Reflectance data is either in memory or from a disk.
2.  Calculation function.
